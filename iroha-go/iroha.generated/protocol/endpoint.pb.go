//*
// Copyright Soramitsu Co., Ltd. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.11.2
// source: endpoint.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxStatus int32

const (
	TxStatus_STATELESS_VALIDATION_FAILED  TxStatus = 0
	TxStatus_STATELESS_VALIDATION_SUCCESS TxStatus = 1
	TxStatus_STATEFUL_VALIDATION_FAILED   TxStatus = 2
	TxStatus_STATEFUL_VALIDATION_SUCCESS  TxStatus = 3
	TxStatus_REJECTED                     TxStatus = 4
	TxStatus_COMMITTED                    TxStatus = 5
	TxStatus_MST_EXPIRED                  TxStatus = 6
	TxStatus_NOT_RECEIVED                 TxStatus = 7
	TxStatus_MST_PENDING                  TxStatus = 8
	TxStatus_ENOUGH_SIGNATURES_COLLECTED  TxStatus = 9
)

// Enum value maps for TxStatus.
var (
	TxStatus_name = map[int32]string{
		0: "STATELESS_VALIDATION_FAILED",
		1: "STATELESS_VALIDATION_SUCCESS",
		2: "STATEFUL_VALIDATION_FAILED",
		3: "STATEFUL_VALIDATION_SUCCESS",
		4: "REJECTED",
		5: "COMMITTED",
		6: "MST_EXPIRED",
		7: "NOT_RECEIVED",
		8: "MST_PENDING",
		9: "ENOUGH_SIGNATURES_COLLECTED",
	}
	TxStatus_value = map[string]int32{
		"STATELESS_VALIDATION_FAILED":  0,
		"STATELESS_VALIDATION_SUCCESS": 1,
		"STATEFUL_VALIDATION_FAILED":   2,
		"STATEFUL_VALIDATION_SUCCESS":  3,
		"REJECTED":                     4,
		"COMMITTED":                    5,
		"MST_EXPIRED":                  6,
		"NOT_RECEIVED":                 7,
		"MST_PENDING":                  8,
		"ENOUGH_SIGNATURES_COLLECTED":  9,
	}
)

func (x TxStatus) Enum() *TxStatus {
	p := new(TxStatus)
	*p = x
	return p
}

func (x TxStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_endpoint_proto_enumTypes[0].Descriptor()
}

func (TxStatus) Type() protoreflect.EnumType {
	return &file_endpoint_proto_enumTypes[0]
}

func (x TxStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxStatus.Descriptor instead.
func (TxStatus) EnumDescriptor() ([]byte, []int) {
	return file_endpoint_proto_rawDescGZIP(), []int{0}
}

type ToriiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxStatus       TxStatus `protobuf:"varint,1,opt,name=tx_status,json=txStatus,proto3,enum=iroha.protocol.TxStatus" json:"tx_status,omitempty"`
	TxHash         string   `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	ErrOrCmdName   string   `protobuf:"bytes,3,opt,name=err_or_cmd_name,json=errOrCmdName,proto3" json:"err_or_cmd_name,omitempty"`
	FailedCmdIndex uint64   `protobuf:"varint,4,opt,name=failed_cmd_index,json=failedCmdIndex,proto3" json:"failed_cmd_index,omitempty"`
	ErrorCode      uint32   `protobuf:"varint,5,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
}

func (x *ToriiResponse) Reset() {
	*x = ToriiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoint_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToriiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToriiResponse) ProtoMessage() {}

func (x *ToriiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_endpoint_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToriiResponse.ProtoReflect.Descriptor instead.
func (*ToriiResponse) Descriptor() ([]byte, []int) {
	return file_endpoint_proto_rawDescGZIP(), []int{0}
}

func (x *ToriiResponse) GetTxStatus() TxStatus {
	if x != nil {
		return x.TxStatus
	}
	return TxStatus_STATELESS_VALIDATION_FAILED
}

func (x *ToriiResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *ToriiResponse) GetErrOrCmdName() string {
	if x != nil {
		return x.ErrOrCmdName
	}
	return ""
}

func (x *ToriiResponse) GetFailedCmdIndex() uint64 {
	if x != nil {
		return x.FailedCmdIndex
	}
	return 0
}

func (x *ToriiResponse) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type TxStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *TxStatusRequest) Reset() {
	*x = TxStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoint_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxStatusRequest) ProtoMessage() {}

func (x *TxStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_endpoint_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxStatusRequest.ProtoReflect.Descriptor instead.
func (*TxStatusRequest) Descriptor() ([]byte, []int) {
	return file_endpoint_proto_rawDescGZIP(), []int{1}
}

func (x *TxStatusRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type TxList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *TxList) Reset() {
	*x = TxList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_endpoint_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxList) ProtoMessage() {}

func (x *TxList) ProtoReflect() protoreflect.Message {
	mi := &file_endpoint_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxList.ProtoReflect.Descriptor instead.
func (*TxList) Descriptor() ([]byte, []int) {
	return file_endpoint_proto_rawDescGZIP(), []int{2}
}

func (x *TxList) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

var File_endpoint_proto protoreflect.FileDescriptor

var file_endpoint_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x69, 0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x1a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x71, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcf, 0x01, 0x0a, 0x0d, 0x54, 0x6f, 0x72, 0x69, 0x69, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x72, 0x6f, 0x68,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x08, 0x74, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x5f, 0x6f, 0x72,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x4f, 0x72, 0x43, 0x6d, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x43,
	0x6d, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x49, 0x0a, 0x06, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x80, 0x02,
	0x0a, 0x08, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x1e, 0x0a,
	0x1a, 0x53, 0x54, 0x41, 0x54, 0x45, 0x46, 0x55, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1f, 0x0a,
	0x1b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x46, 0x55, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4d,
	0x53, 0x54, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c,
	0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0f,
	0x0a, 0x0b, 0x4d, 0x53, 0x54, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12,
	0x1f, 0x0a, 0x1b, 0x45, 0x4e, 0x4f, 0x55, 0x47, 0x48, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54,
	0x55, 0x52, 0x45, 0x53, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x09,
	0x32, 0xaa, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x76, 0x31, 0x12, 0x3c, 0x0a, 0x05, 0x54, 0x6f, 0x72, 0x69, 0x69, 0x12,
	0x1b, 0x2e, 0x69, 0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x72, 0x69,
	0x69, 0x12, 0x16, 0x2e, 0x69, 0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x54, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x2e, 0x69, 0x72,
	0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x69,
	0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x6f,
	0x72, 0x69, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1f, 0x2e, 0x69, 0x72,
	0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x78, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x69,
	0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x54, 0x6f,
	0x72, 0x69, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x32, 0xa2, 0x01,
	0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76,
	0x31, 0x12, 0x3c, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x69, 0x72, 0x6f, 0x68,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x1a, 0x1d, 0x2e, 0x69, 0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x12,
	0x1b, 0x2e, 0x69, 0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x22, 0x2e, 0x69,
	0x72, 0x6f, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x42, 0x1a, 0x5a, 0x18, 0x69, 0x72, 0x6f, 0x68, 0x61, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_endpoint_proto_rawDescOnce sync.Once
	file_endpoint_proto_rawDescData = file_endpoint_proto_rawDesc
)

func file_endpoint_proto_rawDescGZIP() []byte {
	file_endpoint_proto_rawDescOnce.Do(func() {
		file_endpoint_proto_rawDescData = protoimpl.X.CompressGZIP(file_endpoint_proto_rawDescData)
	})
	return file_endpoint_proto_rawDescData
}

var file_endpoint_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_endpoint_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_endpoint_proto_goTypes = []interface{}{
	(TxStatus)(0),              // 0: iroha.protocol.TxStatus
	(*ToriiResponse)(nil),      // 1: iroha.protocol.ToriiResponse
	(*TxStatusRequest)(nil),    // 2: iroha.protocol.TxStatusRequest
	(*TxList)(nil),             // 3: iroha.protocol.TxList
	(*Transaction)(nil),        // 4: iroha.protocol.Transaction
	(*Query)(nil),              // 5: iroha.protocol.Query
	(*BlocksQuery)(nil),        // 6: iroha.protocol.BlocksQuery
	(*emptypb.Empty)(nil),      // 7: google.protobuf.Empty
	(*QueryResponse)(nil),      // 8: iroha.protocol.QueryResponse
	(*BlockQueryResponse)(nil), // 9: iroha.protocol.BlockQueryResponse
}
var file_endpoint_proto_depIdxs = []int32{
	0, // 0: iroha.protocol.ToriiResponse.tx_status:type_name -> iroha.protocol.TxStatus
	4, // 1: iroha.protocol.TxList.transactions:type_name -> iroha.protocol.Transaction
	4, // 2: iroha.protocol.CommandService_v1.Torii:input_type -> iroha.protocol.Transaction
	3, // 3: iroha.protocol.CommandService_v1.ListTorii:input_type -> iroha.protocol.TxList
	2, // 4: iroha.protocol.CommandService_v1.Status:input_type -> iroha.protocol.TxStatusRequest
	2, // 5: iroha.protocol.CommandService_v1.StatusStream:input_type -> iroha.protocol.TxStatusRequest
	5, // 6: iroha.protocol.QueryService_v1.Find:input_type -> iroha.protocol.Query
	6, // 7: iroha.protocol.QueryService_v1.FetchCommits:input_type -> iroha.protocol.BlocksQuery
	7, // 8: iroha.protocol.CommandService_v1.Torii:output_type -> google.protobuf.Empty
	7, // 9: iroha.protocol.CommandService_v1.ListTorii:output_type -> google.protobuf.Empty
	1, // 10: iroha.protocol.CommandService_v1.Status:output_type -> iroha.protocol.ToriiResponse
	1, // 11: iroha.protocol.CommandService_v1.StatusStream:output_type -> iroha.protocol.ToriiResponse
	8, // 12: iroha.protocol.QueryService_v1.Find:output_type -> iroha.protocol.QueryResponse
	9, // 13: iroha.protocol.QueryService_v1.FetchCommits:output_type -> iroha.protocol.BlockQueryResponse
	8, // [8:14] is the sub-list for method output_type
	2, // [2:8] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_endpoint_proto_init() }
func file_endpoint_proto_init() {
	if File_endpoint_proto != nil {
		return
	}
	file_transaction_proto_init()
	file_queries_proto_init()
	file_qry_responses_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_endpoint_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToriiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoint_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_endpoint_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_endpoint_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_endpoint_proto_goTypes,
		DependencyIndexes: file_endpoint_proto_depIdxs,
		EnumInfos:         file_endpoint_proto_enumTypes,
		MessageInfos:      file_endpoint_proto_msgTypes,
	}.Build()
	File_endpoint_proto = out.File
	file_endpoint_proto_rawDesc = nil
	file_endpoint_proto_goTypes = nil
	file_endpoint_proto_depIdxs = nil
}
